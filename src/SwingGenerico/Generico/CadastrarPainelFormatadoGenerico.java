package SwingGenerico.Generico;

import SwingGenerico.Interfaces.PainelGenerico;
import com.google.gson.JsonObject;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Efraim
 */
public class CadastrarPainelFormatadoGenerico extends javax.swing.JPanel implements PainelGenerico {

    /**
     * Creates new form JPanelGenerico
     */
    int x0 = 10, y0 = 10;
    String nome = "Nome";
    String Mascara;
    boolean MascaraLength = true; //Usado para determinar se a validação utiliza o length da máscara.
    public CadastrarPainelFormatadoGenerico() {
        initComponents();
        nomeInvalidoLabel.setVisible(false);
        this.setFormatter("");
        this.redimensionar();
    }
    public CadastrarPainelFormatadoGenerico(String nome) {
        initComponents();
        nomeInvalidoLabel.setVisible(false);
        this.setNome(nome);
        this.setFormatter(nome);
    }
    public CadastrarPainelFormatadoGenerico(String nome, String mascara, boolean mascaraLength) {
        initComponents();
        nomeInvalidoLabel.setVisible(false);
        this.setNome(nome);
        Mascara = mascara;
        this.MascaraLength = mascaraLength;
        this.setFormatter("");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nomeLabel = new javax.swing.JLabel();
        nomeInvalidoLabel = new javax.swing.JLabel();
        TextField = new javax.swing.JFormattedTextField();

        setPreferredSize(new java.awt.Dimension(180, 60));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        setLayout(null);

        nomeLabel.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        nomeLabel.setText("Nome:");
        add(nomeLabel);
        nomeLabel.setBounds(10, 10, 35, 16);

        nomeInvalidoLabel.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        nomeInvalidoLabel.setForeground(new java.awt.Color(255, 0, 0));
        nomeInvalidoLabel.setText("Nome Inválido");
        add(nomeInvalidoLabel);
        nomeInvalidoLabel.setBounds(50, 40, 100, 16);

        TextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        add(TextField);
        TextField.setBounds(50, 10, 6, 20);
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        TextField.setBounds(TextField.getX(), TextField.getY(), this.getWidth() - (nomeLabel.getX() + nomeLabelSize()) - 10, 26);
        validate();
        repaint();
    }//GEN-LAST:event_formComponentResized

    @Override
    public String getNome() {
        return nome;
    }
    
    public void setNome(String novoNome) {
        nome = novoNome;
        this.renomearLabels();
    }
    public void setCustomMsgInvalido(String msgErro) {
        nomeInvalidoLabel.setText(msgErro);
        this.redimensionar();
    }
    private void renomearLabels() {
        nomeLabel.setText(String.format("%s:", nome));
        nomeInvalidoLabel.setText(String.format("%s Inválido", nome));
        this.redimensionar();
    }
    private int nomeLabelSize() {
        return (nomeLabel.getText().length()*7) + 3;
    }
    private int nomeInvalidoLabelSize() {
        return nomeInvalidoLabel.getText().length()*7;
    }
    private int TextFieldSize() {
        return TextField.getWidth();
    }
    private void redimensionar() {
        nomeLabel.setBounds(x0, y0, this.nomeLabelSize(), 14);
        nomeInvalidoLabel.setBounds(x0 + this.nomeLabelSize() + 5, y0 + 30, this.nomeInvalidoLabelSize(), 14);
        TextField.setBounds(x0 + this.nomeLabelSize() + 5, TextField.getY(), this.getWidth() - (nomeLabel.getX() + nomeLabelSize()) - 10, 26);
    }
    private void mostrarMensagemErro(boolean visivel) {
        nomeInvalidoLabel.setVisible(visivel);
    }
    private void setFormatter(String tipo) {
        if (tipo.startsWith("Data")) {
            TextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
                    new javax.swing.text.DateFormatter()));
        } else {
            switch (tipo) {
                case "Inteiro":
                    TextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
                            new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
                    break;
                case "Dinheiro":
                    TextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
                            new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("¤¤#,##0.00"))));
                    break;
                case "CPF":
                    try {
                        Mascara = "###.###.###-##";
                        TextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
                                new javax.swing.text.MaskFormatter("###.###.###-##")));
                    } catch (java.text.ParseException ex) {
                        ex.printStackTrace();
                    }
                    break;
                case "Celular":
                    try {
                        Mascara = "(##)#####-####";
                        TextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
                                new javax.swing.text.MaskFormatter("(##)#####-####")));
                    } catch (java.text.ParseException ex) {
                        ex.printStackTrace();
                    }
                    break;
                case "Telefone":
                    try {
                        Mascara = "(##)####-####";
                        TextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
                                new javax.swing.text.MaskFormatter("(##)####-####")));
                    } catch (java.text.ParseException ex) {
                        ex.printStackTrace();
                    }
                    break;
                default:
                    try {
                        TextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
                                new javax.swing.text.MaskFormatter(Mascara)));
                    } catch (java.text.ParseException ex) {
                        ex.printStackTrace();
                    }
                    break;
            }
        }
    }
    
    @Override
    public boolean painelPreenchido() {
        if (nome.equals("Dinheiro")) {
            if (!TextField.getText().equals("")) {
                this.mostrarMensagemErro(false);
                return true;
            } else {
                this.mostrarMensagemErro(true);
                return false;
            }
        } else if (nome.startsWith("Data")) {
            if (TextField.getText().trim().length() == 10) {
                this.mostrarMensagemErro(false);
                return true;
            } else {
                this.mostrarMensagemErro(true);
                return false;
            }
        } else {
            if (MascaraLength) {
                if (TextField.getText().trim().length() == Mascara.length()) {
                    this.mostrarMensagemErro(false);
                    return true;
                } else {
                    this.mostrarMensagemErro(true);
                    return false;
                }
            } else {
                if (!TextField.getText().equals("")) {
                    this.mostrarMensagemErro(false);
                    return true;
                } else {
                    this.mostrarMensagemErro(true);
                    return false;
                }
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField TextField;
    private javax.swing.JLabel nomeInvalidoLabel;
    private javax.swing.JLabel nomeLabel;
    // End of variables declaration//GEN-END:variables


    @Override
    public void addInput(JsonObject jsonObj) {
        jsonObj.addProperty(this.nome, TextField.getText());
    }
}
