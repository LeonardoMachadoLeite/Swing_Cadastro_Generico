/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SwingGenerico.Generico;

import SwingGenerico.BancoDeDados.BancoDeDados;
import SwingGenerico.Interfaces.PainelGenerico;
import java.util.ArrayList;
import SwingGenerico.Interfaces.ClasseGenerica;
import com.google.gson.JsonObject;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;

/**
 *
 * @author Efraim
 */
public class DropBoxGenerico extends javax.swing.JPanel implements PainelGenerico{

    /**
     * Creates new form DropBoxGenerico
     */
    private String nome;
    private Class classe;
    private ArrayList<String> opcoes;
    private ArrayList<?> objects;
    public DropBoxGenerico() {
        this("", new String[] {""});
    }
    public DropBoxGenerico(String nome, String[] listaOpcoes) {
        this.nome = nome;
        this.opcoes = new ArrayList<>();
        this.opcoes.add(this.nome);
        for (String i : listaOpcoes) {
            this.opcoes.add(i);
        }
        initComponents();
        jLabel1.setVisible(false);
    }
    public DropBoxGenerico(String nome, Class<? extends ClasseGenerica> classe) {
        this.nome = nome;
        this.classe = classe;
        this.opcoes = new ArrayList<>();
        this.opcoes.add(nome);
        this.objects = BancoDeDados.getInstance().getObjectList(classe);
        if (this.objects != null) {
            for (Object i : this.objects) {
                this.opcoes.add(classe.cast(i).getKey().toString());
            }
        }
        initComponents();
        jLabel1.setVisible(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(this.opcoes.toArray(new String[this.opcoes.size()])));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Selecione uma das opções.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    public void removerAtual() {
        String aux = (String) jComboBox1.getSelectedItem();
        if (!aux.equals(this.nome)) {
            int index = this.opcoes.indexOf(aux);
            this.opcoes.remove(index);
            try {
                BancoDeDados.getInstance().deleteObject(this.objects.remove(index - 1), this.classe);
            } catch (SQLException ex) {
                Logger.getLogger(DropBoxGenerico.class.getName()).log(Level.SEVERE, null, ex);
            }
            DefaultComboBoxModel<String> temp = new DefaultComboBoxModel<>();
            for (String i : this.opcoes) {
                temp.addElement(i);
            }
            jComboBox1.setModel(temp);
            validate();
            repaint();
        }
    }

    @Override
    public boolean painelPreenchido() {
        if (((String) jComboBox1.getSelectedItem()).equals(this.nome)) {
            jLabel1.setVisible(true);
            return false;
        } else {
            jLabel1.setVisible(false);
            return true;
        }
    }

    @Override
    public void addInput(JsonObject jsonObj) {
        jsonObj.addProperty(this.nome, (String) jComboBox1.getSelectedItem());
    }
    
    @Override
    public String getNome() {
        return nome;
    }
    
}
